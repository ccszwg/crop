% \iffalse
%% File: crop.dtx   Copyright (C) 1998--2000   Melchior FRANZ
%% $Id$
%<*preamble>
%
%     (1)  run `crop.dtx' through LaTeX to get `crop.ins',
%          (if you don't already have it)
%
%     (2)  run `crop.ins' through (La)TeX to get
%          the package `crop.sty'
%
%          [or use `docstrip', and extract `crop.sty' from `crop.dtx'
%           using option `package']
%
%     (3)  now run `crop.dtx' three times through LaTeX
%          to get the documentation file `crop.dvi'
%
%
%% ====================================================================
%%  @LaTeX-package-file{
%%     author          = "Melchior FRANZ",
%%     version         = "1.5pre",
%%     date            = "31 December 2000",
%%     filename        = "crop.dtx",
%%     address         = "Melchior FRANZ
%%                        A-5212 SCHNEEGATTERN 34
%%                        AUSTRIA",
%%     telephone       = "++43 7746 3109",
%%     URL             = "http://www.unet.univie.ac.at/~a8603365/",
%%     email           = "a8603365@unet.univie.ac.at",
%%     codetable       = "ISO/ASCII",
%%     keywords        = "cropmarks, frame, mirror, rotate, invert",
%%     supported       = "yes",
%%     docstring       = "This document describes the crop package, which
%%                        provides different forms of cropmarks for
%%                        trimming paper stacks, for camera alignment, and
%%                        for visualizing the page dimensions.
%%                        There are options for centering the page with
%%                        respect to some physical paper size, for marking
%%                        the vertical and horizontal middle axis, for
%%                        mounting pages on a physical sheet, and for
%%                        reflecting and inverting the whole document or
%%                        printing it upside-down. Custom definitions are
%%                        supported by loading a local configuration file
%%                        and providing a mode definition command, which is
%%                        demonstrated in an example.",
%%  }
%% ====================================================================
%
% COPYRIGHT NOTICE:
% This package is free software that can be redistributed and/or modified
% under the terms of the LaTeX Project Public License as specified
% in the file macros/latex/base/lppl.txt on any CTAN archive server.
%
%</preamble>
%
%
%<*batchfile>
\begin{filecontents}{crop.ins}
\def\batchfile{crop.ins}
\input docstrip.tex
\keepsilent
\generate{\file{crop.sty}{\from{crop.dtx}{package}}}
\endbatchfile
\end{filecontents}
%</batchfile>
%
%
%
%<*driver>
\def\fileversion{1.5pre}
\def\filedate{2000/12/31}
\documentclass[draft]{ltxdoc}
%
\let\opt\textsf                % mode/option names are typeset this way
%
% 
\IfFileExists{crop.sty}
  {\usepackage{crop}[2000/12/31]\let\CROPSTYfound\active}
  {\GenericWarning{crop.dtx}
    {Package file `crop.sty' not found (One picture will be missing.^^J
    Generate `crop.sty' by (La)TeXing `crop.ins',
    process `crop.dtx' again.)^^J}}
%
%
\newenvironment{labeling}[1]
  {\list{}{\settowidth{\labelwidth}{\textbf{#1}}
  \leftmargin\labelwidth\advance\leftmargin\labelsep
  \def\makelabel##1{\textbf{##1}\hfil}}}{\endlist}
%
% ^^A \RecordChanges
%
\begin{document}
\hfuzz.6pt
\DocInput{crop.dtx}
\end{document}
%</driver>
% \fi
%
%
% \CheckSum{735}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
%
%
% \title{The \texttt{crop} package}
%
% \author{Melchior \textsc{FRANZ}}
% \date{December 31, 2000}
% \maketitle
%
%
% \changes{v1.0}{1998/05/20}{Initial version (under this name---sigh!)}%
%
% \changes{v1.1a}{1998/10/20}{`smash replaced; The cropmarks
%   were displaced, when the package was used together with the
%   \texttt{amsmath} package (V1.2c), which redefines the \LaTeX\ smash
%   command to have a different meaning. Although, this is definitely a
%   bug in the \texttt{amsmath} design, we do no longer use
%   `smash. This problem was kindly reported by Pauli \textsc{VILJAMAA.}}%
% 
% \changes{v1.2}{1998/12/07}{options `mirror' and `invert' added
%   on suggestion by Rolf \textsc{NIEPRASCHK.}}%
%
% \changes{v1.3}{1999/03/07}{center the logical paper `AtBeginDocument'
%   instead of immediately; postamble changed slightly; `uppercase
%   removed from info}
%
% \changes{v1.3a}{1999/05/15}{copyright complies with the LPPL; code unchanged}
%
% \changes{v1.4}{2000/02/02}{options `rotate' (suggested by Rolf) and
%   `info/noinfo' (requested by Anshuman \textsc{PANDEY}) added}
%
% \changes{v1.5}{2000/12/31}{*center options replaced by `center' and paper size
%   options; options `dvips', `pdftex', `vtex', `color', `horigin' and `vorigin' added}
%
%
%
% \begin{abstract}
% This article describes the \texttt{crop} package\footnote{This file has version 
% number \fileversion, last revised \filedate.\\I'd like to thank
% \textsc{Rolf Niepraschk} for his useful hints and suggestions, which influenced
% the package substantially.}, which provides different forms of cropmarks for trimming paper 
% stacks, for camera alignment, and for visualizing the page dimensions.
% There are options for centering the page with respect to some physical
% paper size, for marking the vertical and horizontal middle axis, for
% mounting pages on a physical sheet, and for reflecting and inverting
% the whole document or printing it upside-down.
% Custom definitions are supported by loading a local configuration
% file and providing a mode definition command.
%
% The package was originally developed for needs of the
% Austrian Red Cross\slash Federal Province of Vienna\slash 
% Department of Radiation Protection.
% \end{abstract}
%
%
% {\setlength\parskip{0pt}\tableofcontents}
% \addtocontents{toc}{\protect\begin{multicols}{2}}
%
%
% \section{Introduction}
% It is convenient to print documents for smaller logical paper sizes
% on paper of the printer's standard physical paper size.
% On the one hand this keeps from changing paper stacks, on the other
% hand it allows printing close to the logical paper edge and even outside
% the logical page.
% 
% For trimming a whole paper stack or ligning up the single pages on
% printing plates for photographical duplication a set of corner marks
% is required.
%
%
% \section{How to use the package}
%
% \subsection{The options}
% \newcommand\Ast{\llap{$^\ast$}}
%
% The following list shows all package options, whereby those marked with
% a little asterisk are conventional options that are only accessible,
% when the package is loaded (e.\,g.~|\usepackage[frame]{crop}|).
% All other options can also be executed after loading the
% package, in which case they are to be stated as an optional argument(list)
% to the |\crop| command (e.\,g.~|\crop[frame]|).
% 
% \begin{labeling}{\indent\indent}
% \item[\sffamily cam]
%    This mode provides four different marks (see figure \ref{fig:marks}),
%    one for each corner, which show the logical paper edges without
%    touching them and can thus be printed on every page. These
%    marks are mainly thought for camera alignment. The |\crop| command
%    selects this mode if no other mode is requested.
%
% \item[\sffamily cross]
%    This mode provides four two inch wide crosses (see figure
%    \ref{fig:marks}), one at each corner that touch the logical paper
%    edge. That's the reason why they should be printed on an extra page
%    to be used as a cover page while trimming the whole paper stack.
%    (This is also the \emph{Red Cross} mode ;-)
%
% \item[\sffamily frame]
%    This mode draws a frame around the logical page and is mainly thought
%    for visualizing the logical paper dimensions.
%
% \item[\sffamily off]
%    This `option' makes only sense in connection with the |\crop| command
%    (i.\,e.~at runtime). It disables all markings and is selected by
%    default if the package is input without options requested.
%
% \item[\sffamily axes, noaxes]---
%    These options enable\slash disable the output of little marks which
%    show the horizontal and vertical middle axis of the logical page and
%    may be selected in addition to one of the above modes. These marks
%    might be needed for punching. Notice that they are lost after
%    trimming, since they lie outside the logical page.
%    These marks are disabled by default.
%
% \changes{v1.4}{2000/02/02}{info/noinfo options added}
% \item[\sffamily info, noinfo]---
%    Show the page info consisting of filename, date and page number on every
%    sheet (see figure \ref{fig:marks}).  This information is enabled by default.
%
% \changes{v1.1}{1998/07/01}{mount options added}%
% \item[\sffamily mount1, mount2]---
%    If more than one logical page is to be mounted on a physical sheet,
%    you normally wouldn't want marks to appear on the inner edges, where
%    the pages touch each other.
%    The \opt{mount2} mode prints only the outer marks.
%    There's also a \opt{mount1} mode that is selected by default.
%    These commands take a number as an optional argument serving
%    as a page offset. Type |mount2| or |mount2=0| for odd pages right
%    and |mount2=1| for odd pages left.\footnote{The `|=|' notation may not
%    look very intuitive at first glance, but other packages already use 
%    this notation for assignments and it was not desirable to introduce a
%    new one.} Since further modes are likely to be document, driver, and
%    printer dependent, no more modes are included. It is up to you, to
%    implement such modes. (See a \opt{mount4} suggestion on page
%    \pageref{sec:mount4}.)
%
% \changes{v1.5}{2000/12/31}{options horigin and vorigin added}%
% \item[\sffamily horigin, vorigin]---
%    The top and left margin are by default 1 inch. This can be changed
%    using the dimensions |\oddsidemargin|, |\evensidemargin| and
%    |\topmargin|. The |geometry| package does a very good job setting
%    all these parameters. The options \opt{horigin} and \opt{vorigin} only
%    move the marks and don't change the page contents. Only them only if
%    you know what you are doing. Both options take a mandatory dimension:
%    write for example |horigin=-.6in|.
%
% \changes{v1.5}{2000/12/31}{paper size options added}%
% \item[\sffamily\Ast a0, a1, a2, a3, a4, a5, a6,
%    b0, b1, b2, b3, b4, b5, b6, letter, legal, executive]\hfill\break
%    These options define the printing paper dimensions. They are required
%    if you are using at least one of the options |center|, |dvips| and
%    |pdftex|, otherwise an error messages gets issued.
%
% \changes{v1.1}{1998/07/01}{center options added}%
% \changes{v1.5}{2000/12/31}{center options replaced}%
% \item[\sffamily\Ast center]
%    Corresponding to the standard classes' |paper| options there are
%    \opt{center} options that allow to center the logical output page
%    on the respective physical printer paper.
%
% \item[\sffamily\Ast landscape]---
%    This option is to be set in addition to the \opt{center}
%    option if a document should be centered on \emph{landscape oriented}
%    paper. It has nothing to do with the standard |landscape| option.
%
% \changes{v1.5}{2000/12/31}{options `dvips' and `pdftex' added}%
% \item[\sffamily\Ast dvips, pdftex]---
%    \TeX\ doesn't care about your printing paper. It just typesets documents.
%    If you are working with |dvips| or |pdftex| you may want to sepcify the
%    dimensions of the paper you are planning to print on in your PostScript
%    or PDF's documents. This requires you to chose one of the paper size
%    options mentioned above, of course.
%
% \changes{v1.2}{1998/12/07}{mirror option added}
% \item[\sffamily\Ast mirror]
%    This option reflects the whole document, provided that the \emph{dvi} output
%    driver handles PostScript |\special|'s. It uses the standard graphics interfaces,
%    if the document loads the |graphics| and/or the |color| package,
%    or a matching interface file such as |dvips.def|. 
%    If no interface is defined, the package uses its internal macros. 
%
% \changes{v1.4}{2000/02/02}{rotate option added}
% \item[\sffamily\Ast rotate]
%    Rotates the document by 180\(^\circ\) so that it appears upside-down.
%    This may be useful to circumvent problems with printers, which do not print
%    close enough to the lower paper edge due to their paper feed mechanism.
%    This option relies on \textsc{PS}, just like the \opt{mirror} option.
%
% \changes{v1.2}{1998/12/07}{invert option added}
% \item[\sffamily\Ast invert]
%    Lets the whole document be printed white onto black background, 
%    if the |color| package can be loaded and the document is output with an
%    output device that is capable of executing \textsc{PS} commands. All color
%    changing commands stated in the document are ignored.
%
% \changes{v1.5}{2000/12/31}{options `textonly' and `grphonly' added}
% \item[\sffamily\Ast textonly, grphonly]---
%    Color printouts are often more expensive than black and white ones, while
%    their text quality is sometimes reduced. Therefore it may be desirable to create
%    two versions of a document, one with only text and one with only
%    graphics. Now you can feed the concerned pages through a color printer
%    and then through a mono laser printer, each pass using the
%    matching document version. The \opt{textonly} option suppresses every
%    special command within |\includegraphics| commands. The \opt{grphonly}
%    option typesets all text in color white, but note that it is still
%    there!
% \end{labeling}
%
%
%^^A \noindent
%^^A Further marks can be implemented using the |\cropdef| command (see below).
%
%
% {\makeatletter
% \ifx\CROPSTYfound\active 
% \begin{figure}
%   \begin{quote}
%     \begin{center}
%       \vspace{.6in}
%       \leavevmode
%       \hbox{\paperwidth3.5in\CROP@@ulc\CROP@@info\CROP@@urc}
%       \vspace{.2in}
%       \caption{That's what you see on top of a four inch wide logical page when
%           \opt{cam} mode is requested.}
%       \label{fig:marks}
%    \end{center}
%   \end{quote}
% \end{figure}
% \fi}
%
%
% \subsection{Loading}
%
% Since all marks lie outside the logical page, the horizontal and vertical
% offset are to be set properly. Otherwise the marks are likely to be cut
% off by the \textsc{DVI} driver or the printer.
% The |center| options center every logical page on the respective
% physical paper. The \opt{a4center} option, for example, centers the    ^^A !!!!!!!!!!!!!!!!!!!!1
% page exactly on an~\textsc{ISO~A4} sheet.
%
%
% \begin{multicols}{2}
% \setlength\columnseprule{.4pt}
% \vbox{%
%\begin{verbatim}
%\documentclass[a5paper]{article}
%\usepackage[cam,a4,center]{crop}
%\begin{document}
%...
%\end{document}
%\end{verbatim}
%}
%
% \vbox{%
%\begin{verbatim}
%\documentclass[a5paper]{article}
%\usepackage[a4,center]{crop}
%\begin{document}
%...
%\crop  % or: \crop[cross], etc.
%...
%\end{document}
%\end{verbatim}
%}
% \end{multicols}
%
%
%
%
% \bigbreak\noindent
% There's, however, no harm in centering an A4~page on
% A4~paper, in which case both offsets are set to 0\,pt (unless, of course,
% you have set $\hbox{\verb"\mag"}\ne1000$).
%
%
% You get corner markings at every page shipped out after a \opt{cam},
% \opt{cross}, or \opt{frame} mode request until you turn things off by
% typing \DescribeMacro{\crop}|\crop[off]|, or the actual grouping level
% ends.
% Typing |\crop| without argument(s) is equivalent to typing
% |\crop[cam,noaxes]|.
% Axis marks appear only together with one of the above mentioned modes.
% If you only want one cover page for trimming, make sure that a page is
% output in the scope of |\crop|, e.\,g.:
%\begin{verbatim}
%\newpage
%{\crop[cross,axes]\mbox{}\newpage}
%\end{verbatim}
%
%
%
%
%
%
% \subsection{Custom logical paper sizes}
% 
% This is in fact nothing that would have to be described in this documentation,
% as there's nothing special about selecting \LaTeX's page dimensions. The
% |crop| package respects any page layout that you specify by means of
% \LaTeX\ dimensions. It just seems that people are first confronted with
% this issue when they are using the |crop| package. So here's a little example,
% which uses the |geometry| package. Let's assume you want to print a 
% CD~booklet ($4\,^{23}\!/_{32} \times 4\,^3\!/_4$~inch) on A4 paper:
%
%\begin{verbatim}
%\documentclass{article}
%\usepackage{geometry}
%\usepackage[cam,a4,center,dvips]{crop}
%
%\geometry{%
%  paperwidth=4.71875in,
%  paperheight=4.75in,
%  margin=2em,
%  bottom=1.5em,
%  nohead} 
%
%\begin{document}
%...
%\end{document}
%\end{verbatim}
%
% Note that the geometry parameters can also be stated as options to
% the |\usepackage{geometry}| command. For further help see the 
% |geometry| documentation.
%
%
%
%
% \subsection{Custom physical paper sizes}
% 
%
%
%
%
% \subsection{Defining your own mode}
% \label{sec:cropdef}
%
% If you need a \opt{funny} mode, you can easily define it with
% only a couple of macros. The \DescribeMacro{\cropdef}|\cropdef| command
% defines the mode switch.
% It takes as arguments: the name of a macro providing the page info
% (optional; enclosed in brackets), four macro names to be assigned to
% the upper left, the upper right, the lower left, and the lower right
% corner (each representing a |picture| with zero width and height, or
% |\relax|), and finally the mode name. The optional brackets may also
% be empty, if no page info is wanted, or contain the info code instead of
% a macro name.
%
%\begin{verbatim}
%\newcommand*\funnymarkA{%         % a little x
%  \begin{picture}(0,0)
%    \thinlines\unitlength1pt
%    \put(-5,-5){\line(1,1){10}}
%    \put(-5,5){\line(1,-1){10}}
%  \end{picture}}
%
%\newcommand*\funnymarkB{%         % a bullet
%  \begin{picture}(0,0)
%    \unitlength1pt
%    \put(0,0){\circle*{5}}
%  \end{picture}}
%
%\newcommand*\funnyinfo{funny page info}
%\cropdef[\funnyinfo]\relax\funnymarkA\relax\funnymarkB{funny}
%\end{verbatim}
%
% \noindent
% You can select your own mode by typing |\crop[funny]|.
%
% The package tries to find a file `crop.cfg' where local stuff is to be
% placed in. If you want to prevent your system from desperately seeking 
% this file, you can speed it up by placing an empty configuration file
% in a directory, where \TeX\ looks first. 
%
%
%
%
% \subsection{The configuration file}
% \label{sec:config}
%
% If you want to change the predefined settings, create a
% file named `|crop.cfg|' and put it in a directory, where \TeX\
% can find it. This configuration file will then be loaded
% at the end of the |crop.sty| file, so you may redefine
% any settings or commands, select package options and even
% introduce new package options. But if you intend to give
% your documents to others, don't forget to give them the
% used configuration files, too! That's how such a file
% could look like:                                                                                                           
%
%\begin{verbatim}
%% define a new printing paper size
%\DeclareOption{special}{\CROP@size{22truecm}{37truecm}}
%
%% introduce an option `oldinfo', which restores the page information
%% that was used in older package releases
%\newcommand*\CROP@opt@oldinfo{%
%  \renewcommand*\CROP@@info{%
%    \hskip\paperwidth\hskip12\p@
%    \raise12\p@\hbox{\vbox{%
%      \hbox{``\jobname''\strut}%
%      \hbox{\the\year/\the\month/\the\day\strut}%
%      \hbox{page \thepage\strut}}}}}
%
%% make the package time used in the page information public
%\let\Time\CROP@time
%
%\endinput
%\end{verbatim}
% There's not much you can't do here!
%
%
% \section{How the package works}
%
% \subsection{The kernel mechanism}
%
% \TeX\ outputs a page via the |\shipout| command. The |crop| package
% redefines |\shipout| to insert the requested marks before it outputs
% the page contents. It is carefully designed to coexist peacefully with
% other packages, which use the same method (like the |everyshi| package
% by \textsc{Martin Schr\"oder}, from whom I have in fact borrowed some ideas).
%
% Every page gets its page info, containing the jobname, the current date,
% and the page number placed at the upper left corner.
% The standard macro |\CROP@@info|, however, jumps first to the right corner.
% 
%
%
%
% \subsection{Compatibility}
%
% The package works with all \LaTeXe\ standard classes (tested with 
% \LaTeXe\ 1997/12/01), it does not work with plain \TeX.
%
% The |crop| package uses (and relies on) the internal \LaTeX\ tokens
% |\hb@xt@|, |\@height|, |\@depth|, |\@width|, |\z@|, |\@ne|, |\z@skip|, |\p@|,
% |\@ifundefined|, |\c@page|, |\@namedef|, |\@nameuse|, |\two@digits|,
% |\strip@pt|, |\count@|, |\dimen@|, |\@undefined|, and |\@for|,
% all of which are expected to keep their current meaning in future
% \LaTeX\ releases. The \texttt{crop} package will, however, be supported 
% at least for some years, so you needn't worry about it.
%
% \StopEventually{\addtocontents{toc}{\protect\end{multicols}}}
%
%
%
%
% \section{The macros}
%
%    \begin{macrocode}
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{crop}[2000/12/31 v1.5pre cropmarks  (mf)]
\newdimen\CROP@width  \CROP@width\z@
\newdimen\CROP@height \CROP@height\z@
\newcount\CROP@index  \CROP@index\z@
%    \end{macrocode}
%
%
% \subsection{Conventional options}
% \changes{v1.3}{1999/03/07}{the center options are processed `AtBeginDocument}
%
% These options set the offset values to center a logical page on
% a physical sheet. Since the physical paper dimensions must not underlie
% a possible scaling, |true| dimensions are taken. The \opt{landscape}
% option exchanges the |\hoffset| and |\voffset| dimension.
%
%    \begin{macrocode}
\newcommand*\CROP@checksize{\ifdim\CROP@width=\z@
  \PackageError{crop}{no physical paper size selected}%
    {you have to select a paper size before you can use %
    the options dvips,\MessageBreak pdftex or center}\fi}
\newcommand*\CROP@size[2]{\CROP@width#1 \CROP@height#2 }
\DeclareOption{landscape}{%
  \def\CROP@size#1#2{\CROP@height#1 \CROP@width#2 }}
\DeclareOption{a0}{\CROP@size{841truemm}{1189truemm}}
\DeclareOption{a1}{\CROP@size{595truemm}{841truemm}}
\DeclareOption{a2}{\CROP@size{420truemm}{595truemm}}
\DeclareOption{a3}{\CROP@size{297truemm}{420truemm}}
\DeclareOption{a4}{\CROP@size{210truemm}{297truemm}}
\DeclareOption{a5}{\CROP@size{149truemm}{210truemm}}
\DeclareOption{a6}{\CROP@size{105truemm}{149truemm}}
\DeclareOption{b0}{\CROP@size{1000truemm}{1414truemm}}
\DeclareOption{b1}{\CROP@size{707truemm}{1000truemm}}
\DeclareOption{b2}{\CROP@size{500truemm}{707truemm}}
\DeclareOption{b3}{\CROP@size{353truemm}{500truemm}}
\DeclareOption{b4}{\CROP@size{250truemm}{353truemm}}
\DeclareOption{b5}{\CROP@size{176truemm}{250truemm}}
\DeclareOption{b6}{\CROP@size{125truemm}{176truemm}}
\DeclareOption{letter}{\CROP@size{8.5truein}{11truein}}
\DeclareOption{legal}{\CROP@size{8.5truein}{14truein}}
\DeclareOption{executive}{\CROP@size{7.25truein}{10.5truein}}
%    \end{macrocode}
%
%
%
% \begin{macro}{\CROP@setoffset}
% \begin{macro}{\CROP@center}
% This macro expects height and width of the physical sheet and sets 
% |\voffset| and |\hoffset| to center the logical page on it.
% It is undefined at the end of the package to save
% (admittedly not very much) memory.
%
%    \begin{macrocode}
\DeclareOption{center}{\CROP@checksize\AtBeginDocument{%
  \voffset\CROP@height\advance\voffset-\paperheight\voffset.5\voffset
  \hoffset\CROP@width\advance\hoffset-\paperwidth\hoffset.5\hoffset}}
\DeclareOption{dvips}{\CROP@checksize
  \AtBeginDvi{\special{papersize=\the\CROP@width,\the\CROP@height}}}
\DeclareOption{pdftex}{\ifx\@undefined\pdfpagewidth\else\CROP@checksize
  \AtBeginDocument{\pdfpagewidth\CROP@width \pdfpageheight\CROP@height }%
  \fi}
\DeclareOption{vtex}{\ifx\@undefined\mediawidth\else\CROP@checksize
  \AtBeginDocument{\mediawidth\CROP@width \mediaheight\CROP@height }\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%
% \subsection{Special options handling}
%
% Every unknown option is passed to the macro |\CROP@execopt|.
%
%    \begin{macrocode}
\DeclareOption*{\CROP@execopt\CurrentOption}
%    \end{macrocode}
%
%
% \begin{macro}{\crop}
% The |\crop| macro allows runtime option requests. Every argument of
% the optional argument list is passed to the macro |\CROP@execopt|.
% The options \opt{cam} and \opt{noaxes} are selected by default.
%
%    \begin{macrocode}
\newcommand*\crop[1][cam,noaxes]{%
  \@for\CROP@@:=#1\do{\CROP@execopt\CROP@@}}
%    \end{macrocode}
% \end{macro}
%
%
%
% \begin{macro}{\CROP@execopt}
% Every execution of this macro with an argument $n$ leads to the
% execution of a macro |\CROP@opt@|$n$ or a warning if no such exists.
% Optional arguments (separated by an equal sign) are cut off and
% stored in |\CROP@@| before.
%
% \TeX{}nicians will recognize that the macro tolerates even
% arguments for options that are not prepared to handle arguments
% (e.\,g.~|cross=garbage|), or more than one argument
% (e.\,g.~|mount2=1=garbage|). 
% This is neither a bug, nor a feature. It's rather a consequence of
% the attempt to write simple and fast code.
% The reason why I didn't make use of the |keyval| package that does all
% this (and much more) is, that the |crop| package shouldn't be dependent
% on \emph{any} further package (except \LaTeX, of course).
%
% \changes{v1.1}{1998/07/01}{Parsing optional option arguments}%
%
%    \begin{macrocode}
\newcommand*\CROP@execopt[1]{%
  \def\CROP@##1=##2=##3\@nil{\def\CROP@{##1}\def\CROP@@{##2}}%
  \expandafter\CROP@#1==\@nil%
  \@ifundefined{CROP@opt@\CROP@}%
    {\PackageError{crop}{Requested option `#1' not provided}%
    {Note that the *center options are obsolete. You have to
     request\MessageBreak e.g. [a4,center] instead of [a4center].}}%
      {\@nameuse{CROP@opt@\CROP@}}}
%    \end{macrocode}
% \end{macro}
%
%
%
% \begin{macro}{\cropdef}
% \changes{v1.1a}{1998/10/20}{`CROP@info is `def'ed now}%
% The |\cropdef| macro defines a mode switch (see section
% \ref{sec:cropdef}).
%
%    \begin{macrocode}
\newcommand*\cropdef[6][\CROP@@info]{%
  \@namedef{CROP@opt@#6}{%
    \CROP@on
    \def\CROP@info{#1}%
    \let\CROP@ulc#2
    \let\CROP@urc#3
    \let\CROP@llc#4
    \let\CROP@lrc#5}}
%    \end{macrocode}
% \end{macro}
%
%
%
% \subsection{Standard definitions}
%
% \begin{macro}{\CROP@@vaxis}
% \begin{macro}{\CROP@@haxis}
% \changes{v1.1a}{1998/10/20}{`smash replaced}%
% The standard definitions for the \opt{axes} option. The |\CROP@@vaxis|
% macro must have zero height and depth.
%
%    \begin{macrocode}
\newcommand*\CROP@@vaxis{%
  \hfil
  \setbox\z@\hbox{\vtop{\hrule\@height12\p@\@depth-2\p@\@width.4\p@
    \vskip\paperheight\vskip4\p@
    \hrule\@height\z@\@depth10\p@\@width.4\p@}}%
  \ht\z@\z@ \dp\z@\z@ \box\z@
  \hfil}
\newcommand*\CROP@@haxis{%
  \vfil
  \hb@xt@\paperwidth{%
    \llap{\vrule\@height.2\p@\@depth.2\p@\@width10\p@\hskip2\p@}%
    \hfil
    \rlap{\hskip2\p@\vrule\@height.2\p@\@depth.2\p@\@width10\p@}}%
  \vfil}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\CROP@@info}
% This macro prints the jobname, the current date, and the page number
% at the upper right corner. (In fact it prints it at the upper \emph{left}
% corner, but the first thing the macro does is jumping to the
% right.)
% \changes{v1.3}{1999/03/07}{killed `uppercase; (devotion to LINUX)} 
%
%    \begin{macrocode}
{\count@\time \divide\time60 \count\@ne\time
\multiply\time60 \advance\count@-\time
\xdef\CROP@time{\the\count\@ne:\two@digits{\count@}}}
\newcommand*\CROP@@info{\global\advance\CROP@index\@ne
  \raise8\p@\hb@xt@\paperwidth{\hss\normalfont``\jobname'' --- %
  \the\year/\the\month/\the\day\ --- \CROP@time\ --- %
  page \thepage\ --- \#\the\CROP@index\strut\hss}}                                             
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \subsection{The \opt{cam} mode}
%
% The following four macros provide different marks for the \opt{cam}
% mode. Since they do not affect the logical page by keeping distance
% from its edges, they may be printed on every single output page.
%
% \begin{macro}{\CROP@@ulc}
% The \opt{cam} mode corner mark for the upper left corner.
%    \begin{macrocode}
\newcommand*\CROP@@ulc{%
  \begin{picture}(0,0)\unitlength\p@\thinlines
  \put(-30,0){\circle{10}}
  \put(-30,-5){\line(0,1){10}}
  \put(-35,0){\line(1,0){30}}
  \put(0,30){\circle{10}}
  \put(-5,30){\line(1,0){10}}
  \put(0,35){\line(0,-1){30}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CROP@@urc}
% The \opt{cam} mode corner mark for the upper right corner.
%
%    \begin{macrocode}
\newcommand*\CROP@@urc{%
  \begin{picture}(0,0)\unitlength\p@\thinlines
  \put(30,0){\circle{10}}
  \put(30,-5){\line(0,1){10}}
  \put(35,0){\line(-1,0){30}}
  \put(0,30){\circle{10}}
  \put(-5,30){\line(1,0){10}}
  \put(0,35){\line(0,-1){30}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\CROP@@llc}
% The \opt{cam} mode corner mark for the lower left corner.
%
%    \begin{macrocode}
\newcommand*\CROP@@llc{%
  \begin{picture}(0,0)\unitlength\p@\thinlines
  \put(-30,0){\circle{10}}
  \put(-30,-5){\line(0,1){10}}
  \put(-35,0){\line(1,0){30}}
  \put(0,-30){\circle{10}}
  \put(-5,-30){\line(1,0){10}}
  \put(0,-35){\line(0,1){30}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\CROP@@lrc}
% The \opt{cam} mode corner mark for the lower right corner.
%
%    \begin{macrocode}
\newcommand*\CROP@@lrc{%
  \begin{picture}(0,0)\unitlength\p@\thinlines
  \put(30,0){\circle{10}}
  \put(30,-5){\line(0,1){10}}
  \put(35,0){\line(-1,0){30}}
  \put(0,-30){\circle{10}}
  \put(-5,-30){\line(1,0){10}}
  \put(0,-35){\line(0,1){30}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CROP@opt@cam}
% Define the \opt{cam} mode switch with four different marks.
%
%    \begin{macrocode}
\cropdef\CROP@@ulc\CROP@@urc\CROP@@llc\CROP@@lrc{cam}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \subsection{The \opt{cross} mode}
%
% \begin{macro}{\CROP@@cross}
% This macro provides a two inch wide cross.
%
%    \begin{macrocode}
\newcommand*\CROP@@cross{%
  \begin{picture}(0,0)\unitlength1in\thinlines
    \put(-1,0){\line(1,0){2}}
    \put(0,-1){\line(0,1){2}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CROP@opt@cross}
% Define the \opt{cross} mode switch with four times the same mark.
%
%    \begin{macrocode}
\cropdef\CROP@@cross\CROP@@cross\CROP@@cross\CROP@@cross{cross}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \subsection{The \opt{frame} mode}
%
% \begin{macro}{\CROP@@frame}
% The \opt{frame} mode draws a simple frame around the logical
% page. The respective mark is designed to be used in the upper left
% corner. Since graphics commands expect numbers without dimensions, 
% |\paperwidth| and \hbox{-|height|} are transformed to numbers 
% (representing printer's points). This is done by stripping off the
% unit~|pt|.
%
%    \begin{macrocode}
\newcommand*\CROP@@frame{%
  \begin{picture}(0,0)\unitlength\p@\thinlines
    \put(0,0){\line(1,0){\strip@pt\paperwidth}}
    \put(0,0){\line(0,-1){\strip@pt\paperheight}}
    \put(\strip@pt\paperwidth,0){\line(0,-1){\strip@pt\paperheight}}
    \put(0,-\strip@pt\paperheight){\line(1,0){\strip@pt\paperwidth}}
  \end{picture}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CROP@opt@frame}
% Define the \opt{frame} mode switch with only one mark. (The other
% corners may |\relax|.)
%
%    \begin{macrocode}
\cropdef\CROP@@frame\relax\relax\relax{frame}
%    \end{macrocode}
% \end{macro}
%
%
%
%
%
% \subsection{The kernel}
%
% \changes{v1.1}{1998/07/01}{kernel re-implemented completely new}%
% \begin{macro}{\CROP@shipout}
% \begin{macro}{\CROP@ship}
% \begin{macro}{\CROP@@ship}
% \begin{macro}{\CROP@shiplist}
% \changes{v1.2}{1998/12/07}{`CROP@shiplist added, `CROP@@ship changed}
%
% These macros redefine the \TeX\ primitive |\shipout| to insert the
% contents of the macro |\CROP@@@ship| on top of the box which contains
% the page contents ready for output, after which the original
% |\shipout| command is executed.
%
%    \begin{macrocode}
\let\CROP@shipout\shipout
\renewcommand*\shipout{\afterassignment\CROP@ship\setbox\@cclv=}
\newcommand*\CROP@ship{%
  \ifvoid\@cclv\expandafter\aftergroup\fi\CROP@@ship}
\newcommand*\CROP@shiplist{\CROP@@@ship\box\@cclv}
\newcommand*\CROP@@ship{\CROP@shipout\vbox{\CROP@shiplist}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\CROP@shipadd}
% \changes{v1.2}{1998/12/07}{`CROP@shipadd introduced}
% This macro adds a \emph{page manipulation command} to the \emph{shiplist},
% which gets every ready page as argument and may change it somehow. 
%
%    \begin{macrocode}
\newcommand*\CROP@shipadd[1]{\begingroup
  \toks@\expandafter{\expandafter#1\expandafter{\CROP@shiplist}}%
  \xdef\CROP@shiplist{\the\toks@}%
  \endgroup}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CROP@kernel}
% \changes{v1.1}{1998/07/01}{`CROP@every inserted}%
% \changes{v1.1a}{1998/10/20}{`smash replaced}%
% \changes{v1.2}{1998/12/07}{color support added}%
% \changes{v.1.4.1}{2000/02/14}{variable origin added}%
% |\CROP@kernel| essentially contains a |\vbox| with zero width and height.
% The |\CROP@every| command---which normally equals |\relax|---allows to
% insert commands that modify the behaviour of the selected mode
% (see the options \opt{mount1} and \opt{mount2}).
%
%    \begin{macrocode}
\newcommand*\CROP@kernel{\color@setgroup
  \vbox to\z@{\vskip\CROP@vorigin
    \hb@xt@\z@{\hskip\CROP@horigin
      \CROP@every
      \vbox to\paperheight{%
        \hb@xt@\paperwidth{%
          \setbox\z@\hbox{\normalfont\CROP@@@info}%
          \ht\z@\z@ \dp\z@\z@ \wd\z@\z@ \box\z@
          \CROP@ulc\CROP@uedge\CROP@urc}%
        \CROP@ledge
        \hb@xt@\paperwidth{%
          \CROP@llc\hfil\CROP@lrc}}%
    \hss}%
  \vss}\color@endgroup}
\newcommand*\CROP@opt@horigin{\let\CROP@horigin\CROP@@}
\newcommand*\CROP@opt@vorigin{\let\CROP@vorigin\CROP@@}
%    \end{macrocode}
% \end{macro}
%
%
%
% \begin{macro}{\CROP@on}
% \begin{macro}{\CROP@@@ship}
% \begin{macro}{\CROP@opt@off}
% These macros start and stop the kernel mechanism.
%
%    \begin{macrocode}
\newcommand*\CROP@on{\let\CROP@@@ship\CROP@kernel}
\newcommand*\CROP@opt@off{\let\CROP@@@ship\relax}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
%
%
% \begin{macro}{\CROP@opt@info}
% \begin{macro}{\CROP@opt@noinfo}
% \begin{macro}{\CROP@opt@axes}
% \begin{macro}{\CROP@opt@noaxes}
% \begin{macro}{\CROP@uedge}
% \begin{macro}{\CROP@ledge}
% Enable and disable the output of axis marks and page info.
%
%    \begin{macrocode}
\newcommand*\CROP@opt@info{\def\CROP@@@info{\CROP@info}}
\newcommand*\CROP@opt@noinfo{\let\CROP@@@info\relax}
\newcommand*\CROP@opt@axes{%
  \let\CROP@uedge\CROP@@vaxis
  \let\CROP@ledge\CROP@@haxis}
\newcommand*\CROP@opt@noaxes{%
  \let\CROP@uedge\hfil
  \let\CROP@ledge\vfil}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
%
%
%
% \subsection{Mounting}
%
% \begin{macro}{\CROP@opt@mount1}
% \begin{macro}{\CROP@opt@mount2}
% Since |\newcommand| doesn't allow macro names to contain non-letters,
% we need a somewhat strange construction using |\csname|, |\endcsname|,
% and |\expandafter|.
% |\@namedef| would have worked, too, but it would not have made a check
% for redefinitions.
%
%    \begin{macrocode}
\expandafter\newcommand\expandafter*\csname CROP@opt@mount1\endcsname
  {\let\CROP@every\relax}
\newcount\CROP@offset
\expandafter\newcommand\expandafter*\csname CROP@opt@mount2\endcsname
  {\CROP@offset=\ifx\CROP@@\empty\z@\else\CROP@@\fi
  \def\CROP@every{\count@\c@page
    \advance\count@\CROP@offset
    \ifodd\count@
      \let\CROP@ulc\relax\let\CROP@llc\relax
    \else
      \let\CROP@urc\relax\let\CROP@lrc\relax\let\CROP@info\relax
    \fi}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%
%
%
% \subsection{Page manipulation}
% \changes{v1.2}{1998/12/07}{options `mirror' and `invert' added}
% \changes{v1.4}{2000/02/02}{option `rotate' added}
% \changes{v1.4.1}{2000/02/14}{origin support added}
%  
% \begin{macro}{\CROP@reflect}
% \begin{macro}{\CROP@rotate}
% \begin{macro}{\CROP@setps}
% The \opt{mirror} and \opt{rotate} options add a macro to the \emph{shiplist,}
% which gets every output page then, and embeds it in a PostScript environment.
% The \textsc{PS} commands are only interpreted by \textsc{PS}-aware output drivers
% and do not affect the outcome on all other drivers. Raw \textsc{PS}
% commands are ouput via the |graphics| package's PostScript interface |\Gin@PS@raw|,
% or the built-in |\CROP@ps|. The latter issues a warning, because it is
% less portable. 
%
%    \begin{macrocode}
\DeclareOption{mirror}{%
  \AtBeginDocument{\CROP@shipadd\CROP@reflect\CROP@setps}}
\newcommand*\CROP@reflect[1]{%
  \vbox to\z@{\vskip\CROP@vorigin\hb@xt@\z@{\hskip\CROP@horigin
    \CROP@ps{gsave currentpoint}\kern\paperwidth
    \CROP@ps{currentpoint}\hss}\vss}%
  \CROP@ps{translate -1 1 scale neg exch neg exch translate}%
  \vbox{#1}%
  \CROP@ps{grestore}}
\DeclareOption{rotate}{%
  \AtBeginDocument{\CROP@shipadd\CROP@rotate\CROP@setps}}
\newcommand*\CROP@rotate[1]{%
  \hb@xt@\z@{\hskip\CROP@horigin\vbox to\z@{\vskip\CROP@vorigin
    \CROP@ps{gsave currentpoint}\kern\paperheight
    \hb@xt@\z@{\kern\paperwidth\CROP@ps{currentpoint}\hss}\vss}\hss}%
  \CROP@ps{translate 180 rotate neg exch neg exch translate}%
  \vbox{#1}%
  \CROP@ps{grestore}}
\newcommand*\CROP@setps{%
  \ifx\Gin@PS@raw\@undefined
    \PackageWarning{crop}{internal PostScript interface used}%
    \newcommand*\CROP@ps[1]{\special{ps: ##1}}%
  \else
    \PackageInfo{crop}{graphics/color PostScript interface used}{}%
    \let\CROP@ps\Gin@PS@raw
  \fi
  \let\CROP@setps\relax}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
%
% \begin{macro}{\CROP@invert}
% The \opt{invert} option simply switches to black background
% and white text, after which it disables all color
% switching commands.
%
%    \begin{macrocode}
\DeclareOption{invert}{%
  \AtEndOfPackage{\RequirePackage{color}}%
  \AtBeginDocument{\CROP@invert{black}}}
\newcommand*\CROP@invert[1]{%
  \ifx\color\@undefined
    \PackageWarning{crop}%
      {The `color' package could not be loaded, so I'm\MessageBreak
       ignoring the `invert' and `graphicsonly' option}%
  \else
    \pagecolor{#1}\color{white}%
    \newcommand\CROP@color[2][]{}%
    \DeclareRobustCommand\color{\CROP@color}%
    \DeclareRobustCommand\pagecolor{\CROP@color}%
    \DeclareRobustCommand\textcolor{\CROP@color}%
    \let\normalcolor\relax
  \fi
  \let\CROP@invert\relax}
\DeclareOption{grphonly}{%
  \AtEndOfPackage{\RequirePackage{color}}%
  \AtBeginDocument{\CROP@invert{white}}}
\DeclareOption{textonly}{%
  \AtBeginDocument{\CROP@nographics}}
\newcommand*\CROP@nographics{%
  \let\CROP@graphics\includegraphics
  \def\includegraphics##1{{\let\special\@gobble\CROP@graphics{##1}}}%
  \let\CROP@nographics\@undefined}
%    \end{macrocode}
% \end{macro}
%
%
%
%
%
% \subsection{Some olde stuff}
%
%    \begin{macrocode}
\newcommand*\CROP@compat{\PackageWarning{crop}{center options like
  `a4center' are obsolete and only\MessageBreak provided for
  compatibility reasons. They will be removed\MessageBreak in future
  releases. Use the new separate options `a4'\MessageBreak and
  `center' instead.}}
\DeclareOption{landscapecenter}{%
  \CROP@compat\ExecuteOptions{landscape,center}}
\DeclareOption{a4center}{%
  \CROP@compat\ExecuteOptions{a4,center}}
\DeclareOption{a5center}{%
  \CROP@compat\ExecuteOptions{a5,center}}
\DeclareOption{b5center}{%
  \CROP@compat\ExecuteOptions{b5,center}}
\DeclareOption{lettercenter}{%
  \CROP@compat\ExecuteOptions{letter,center}}
\DeclareOption{legalcenter}{%
  \CROP@compat\ExecuteOptions{legal,center}}
\DeclareOption{executivecenter}{%
  \CROP@compat\ExecuteOptions{executive,center}}
%    \end{macrocode}
%
%
%
%
%
%
%
% \subsection{Final settings}
%
% Switch off marks and axes, set one page per sheet, 
% load the local configuration file, and 
% process the requested options. Finally: Exit.
%
% Notice that we cannot simply use |\ExecuteOptions| to preselect options
% \opt{off}, \opt{noaxes}, \opt{info}, and \opt{mount1}, because it does not accept
% default options declared with |\DeclareOption*|.
% \changes{v1.1}{1998/07/01}{Load optional configuration file `crop.cfg'}%
%
%    \begin{macrocode}
\newcommand*\CROP@horigin{-1truein}
\newcommand*\CROP@vorigin{-1truein}
\crop[off,noaxes,info,mount1]
\InputIfFileExists{crop.cfg}%
  {\PackageInfo{crop}{Local config file crop.cfg used}}{}
\ProcessOptions
\endinput
%</package>
%    \end{macrocode}
%
%
%
%
% \subsection{A \opt{mount4} example}
% \label{sec:mount4}
%
% Since a \opt{mount4} mode is likely to be subject to specific local
% needs, there's only a suggestion provided, which supports a page
% arrangement as shown in figure \ref{fig:mount4}.
%
% \begin{figure}
%   \begin{center}
%     \vspace*{10pt}
%     \makeatletter \catcode`\|=12
%     \sffamily\bfseries
%     \begin{tabular}{|c|c|}
%       \hline
%       \vrule\@height16\p@\@depth8\p@\@width\z@ 2&1\\
%       \hline
%       \vrule\@height16\p@\@depth8\p@\@width\z@ 0&3\\
%       \hline
%     \end{tabular}
%     \vspace*{-10pt}
%   \end{center}
%   \caption{Possible \opt{mount4} arrangement}
%   \label{fig:mount4}
% \end{figure}
%
% 
% \noindent
% First of all |\CROP@offset| is set to the value of the (optional)
% argument or zero.
% Then |\CROP@every| is defined first to set |\count@| to the page number
% increased by this offset: $p=\mbox{pagenumber}+\mbox{offset}$.
% \medbreak
% 
% {\def\MacroFont{\small\ttfamily\itshape}%
%\begin{verbatim}
%\expandafter\newcommand\expandafter*\csname CROP@opt@mount4\endcsname
%  {\CROP@offset=\ifx\CROP@@\empty\z@\else\CROP@@\fi
%  \def\CROP@every{\count@\c@page
%    \advance\count@\CROP@offset
%\end{verbatim}
% 
% \noindent
% Now bits~0 and~1 are checked via |\ifodd| to get
% $p$ modulo 4, after which the respective marks are deleted.
% The comments in the example use for simplicity C-Notation in which
% `|%|' is the modulo or remainder operator, `|==|' the equal, and
% `{\catcode`\|=12\texttt{||}}' the logical (inclusive) OR operator.
%
%\begin{verbatim}
%    \ifodd\count@                         %% if (p % 4 == 1 || p % 4 == 3)
%      \let\CROP@ulc\relax\let\CROP@llc\relax
%      \divide\count@2 \ifodd\count@       %%    if (p % 4 == 3)
%        \let\CROP@urc\relax
%        \let\CROP@info\relax
%      \else                               %%    if (p % 4 == 1)
%        \let\CROP@lrc\relax
%      \fi
%    \else                                 %% if (p % 4 == 0 || p % 4 == 2)
%      \let\CROP@urc\relax\let\CROP@lrc\relax
%      \let\CROP@info\relax
%      \divide\count@2 \ifodd\count@       %%    if (p % 4 == 2)
%        \let\CROP@llc\relax
%      \else                               %%    if (p % 4 == 0)
%        \let\CROP@ulc\relax
%      \fi
%    \fi}}
%\end{verbatim}
% }
%
% ^^A \PrintChanges
% \Finale                                               ^^A.E.I.O.U.^^
%
